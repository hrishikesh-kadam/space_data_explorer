name: cicd-ios

on:
  workflow_dispatch:
    inputs:
      runner:
        description: 'Runner OS'
        required: true
        default: 'macos-13'
        type: choice
        options:
          - 'macos-latest'
          - 'macos-13'
          - 'macos-13-xlarge'
      ref:
        description: 'Flutter channel, version or git reference'
        required: true
        default: 'stable'
        type: choice
        options:
          - 'stable'
          - 'beta'
          - 'master'

defaults:
  run:
    shell: bash

jobs:
  check-allow-cicd-ios:
    name: Check if CICD iOS job is to be allowed
    runs-on: ubuntu-latest
    outputs:
      ALLOW_CICD: ${{ steps.check.outputs.ALLOW_CICD }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: ./tool/github/check-allow-cicd.sh

  cicd-ios:
    name: CICD iOS on ${{ inputs.runner }} using Flutter ${{ inputs.ref }}
    needs: check-allow-cicd-ios
    if: needs.check-allow-cicd-ios.outputs.ALLOW_CICD == 'true'
    runs-on: ${{ inputs.runner }}

    steps:
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'

      # - run: echo '${{ toJSON(github) }}'

      - id: get-checkout-ref
        run: |
          if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            CHECKOUT_REF="$(jq -r .pull_request.head.ref "$GITHUB_EVENT_PATH")"
          else
            CHECKOUT_REF="$GITHUB_REF_NAME"
          fi
          echo "CHECKOUT_REF=$CHECKOUT_REF" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.get-checkout-ref.outputs.CHECKOUT_REF }}
          fetch-depth: '10'
      - uses: actions/checkout@v4
        with:
          repository: 'hrishikesh-kadam/space_data_explorer_secrets'
          path: 'secrets'
          token: ${{ secrets.SECRETS_REPO_TOKEN }}
      - run: git submodule update --init --recursive

      - uses: hrishikesh-kadam/setup-flutter@v1
        with:
          ref: ${{ inputs.ref }}
          setFlutterRootPath: 'true'
          addPubCacheBinToPath: 'true'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ios

      - run: ./tool/prerequisite.sh --member

      - run: ./tool/ios/ci.sh "$(./tool/get-flavor-env.sh)"

      - run: ./tool/ios/deploy.sh "$(./tool/get-flavor-env.sh)"
        if: inputs.ref == 'stable'
