name: cicd

on:
  push:
    branches:
      - prod
      - stag
      - dev
  pull_request:
    branches:
      - prod
      - stag
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  check-allow-cicd:
    name: Check if CICD job is to be allowed
    runs-on: ubuntu-latest
    outputs:
      ALLOW_CICD: ${{ steps.check.outputs.ALLOW_CICD }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: ./tool/github/check-allow-cicd.sh

  cicd:
    name: CICD on ${{ matrix.runner }} using Flutter ${{ matrix.ref }}
    needs: check-allow-cicd
    if: needs.check-allow-cicd.outputs.ALLOW_CICD == 'true'
    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        runner: [ macos-13 ]
        ref: [ stable ]
        experimental: [ false ]
        include:
          - runner: macos-13
            ref: beta
            experimental: false

    steps:
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'

      # - run: echo '${{ toJSON(github) }}'

      - id: get-checkout-ref
        run: |
          if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            CHECKOUT_REF="$(jq -r .pull_request.head.ref "$GITHUB_EVENT_PATH")"
          else
            CHECKOUT_REF="$GITHUB_REF_NAME"
          fi
          echo "CHECKOUT_REF=$CHECKOUT_REF" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.get-checkout-ref.outputs.CHECKOUT_REF }}
          fetch-depth: '10'
      - uses: actions/checkout@v4
        with:
          repository: 'hrishikesh-kadam/space_data_explorer_secrets'
          path: 'secrets'
          token: ${{ secrets.SECRETS_REPO_TOKEN }}
      - run: git submodule update --init --recursive

      - uses: hrishikesh-kadam/setup-flutter@v1
        with:
          ref: ${{ matrix.ref }}
          setFlutterRootPath: 'true'
          addPubCacheBinToPath: 'true'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: android

      - run: ./tool/prerequisite.sh --member

      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ matrix.runner }}-flutter-${{ matrix.ref }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - run: ./tool/ci.sh "$(./tool/get-flavor-env.sh)"

      - uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          name: cicd-${{ matrix.runner }}-${{ matrix.ref }}

      - run: ./tool/cd.sh "$(./tool/get-flavor-env.sh)"
        if: matrix.ref == 'stable'

      - run: ./tool/android/stop-gradle.sh
